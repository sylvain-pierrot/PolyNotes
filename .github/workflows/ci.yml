name: CI

on:
  push:
    branches: [ main ]

jobs:
  build-and-push-images:
    name: Build and publish image Frontend
    runs-on: ubuntu-latest
    steps:
      - id: commit
        uses: pr-mpt/actions-commit-hash@v2

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: frontend
          target: runner
          push: true
          tags: sylvainpierrot/polynotes-frontend:${{ steps.commit.outputs.short }}

      - name: Update Version
        run: |
          git_hash=${{ steps.commit.outputs.short }}
          version=$(cat charts/polynotes-chart/templates/polynotes-frontend.yaml | grep image: | awk '{print $2}')
          sed -i "s/$version/sylvainpierrot\/polynotes-frontend:$git_hash/" charts/polynotes-chart/templates/polynotes-frontend.yaml
          
      - name: Commit and push changes
        uses: devops-infra/action-commit-push@v0.9.2
        with:
          github_token: ${{ secrets.API_TOKEN_GITHUB }}
          commit_message: Update image chart helm"

  # deploy-k8s:
  #   name: Deploy on cluster Polytech
  #   runs-on: ubuntu-latest
  #   needs: build-and-push-images
  #   defaults:
  #     run:
  #       shell: bash
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Set up WireGuard
  #       uses: egor-tensin/setup-wireguard@v1.2.0
  #       with:
  #         endpoint: '${{ secrets.ENDPOINT }}'
  #         endpoint_public_key: '${{ secrets.ENDPOINT_PUBLIC }}'
  #         ips: '${{ secrets.IPS }}'
  #         allowed_ips: '${{ secrets.ALLOWED_IPS }}'
  #         private_key: '${{ secrets.PRIVATE }}'
  #         keepalive: '${{ secrets.KEEPALIVE }}'

  #     - name: Deploy
  #       uses: WyriHaximus/github-action-helm3@v2
  #       with:
  #         exec: helm install -n argocd --repo https://argoproj.github.io/argo-helm argo-cd argo-cd
  #         kubeconfig: '${{ secrets.KUBECONFIG }}'